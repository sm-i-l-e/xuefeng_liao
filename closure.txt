def count():
    fs=[]
    for i in range(1,4):
        def f():
            return i*i
        fs.append(f())
        #区别于fs.append(f),后者在于返回函数引用了变量i，但是它并非立刻
        #执行。等到3个函数都返回时，它们所引用的变量i已经变成了3，因此
        #最终结果为9
    return fs
f1,f2,f3=count()

#如果一定要引用循环变量怎么办？方法是再创建一个函数，用该函数的参数
#绑定循环变量当前的值，无论该循环变量后续如何更改，已绑定到函数参数的
#值不变，具体代码如下：
'''
def count():
    def f(j):
        def g():
            return j*j
        return g
    fs=[]
    for i in range(1,4):
        fs.append(f(i))
    reutrn fs
'''
